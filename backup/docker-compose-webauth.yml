services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./auth:/auth
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--log.level=INFO"
    labels:
      - "traefik.enable=true"
      # 대시보드 라우터
      - "traefik.http.routers.dashboard.rule=Host(`localhost`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`))"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth-web@docker"
      - "traefik.http.routers.dashboard.entrypoints=web"
    networks:
      - traefik

  auth-web:
    image: nginx:alpine
    container_name: auth-web
    restart: unless-stopped
    volumes:
      - ./auth-web:/usr/share/nginx/html:ro
      - ./auth-web/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    labels:
      - "traefik.enable=true"
      # 로그인 페이지 라우터
      - "traefik.http.routers.auth-web.rule=Host(`localhost`) && PathPrefix(`/login`)"
      - "traefik.http.routers.auth-web.service=auth-web"
      - "traefik.http.routers.auth-web.entrypoints=web"
      - "traefik.http.services.auth-web.loadbalancer.server.port=80"
      
      # ForwardAuth 미들웨어
      - "traefik.http.middlewares.auth-web.forwardauth.address=http://auth-web/verify"
      - "traefik.http.middlewares.auth-web.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.auth-web.forwardauth.authResponseHeaders=X-Auth-User"
    networks:
      - traefik

networks:
  traefik:
    name: traefik
    driver: bridge